name: CI
env:
  DEBUG: napi:*
  APP_NAME: package-template
  MACOSX_DEPLOYMENT_TARGET: "10.13"
  CARGO_INCREMENTAL: "1"
permissions:
  contents: write
  id-token: write
"on":
  push:
    branches:
      - main
    tags-ignore:
      - "**"
    paths-ignore:
      - "**/*.md"
      - LICENSE
      - "**/*.gitignore"
      - .editorconfig
      - docs/**
  pull_request: null
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          # x86_64
          - host: macos-latest
            target: x86_64-apple-darwin
            build: pnpm build:napi --target x86_64-apple-darwin
            skipTests: true # macos runners are ARM
          - host: windows-latest
            build: pnpm build:napi --target x86_64-pc-windows-msvc
            target: x86_64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: pnpm build:napi --target x86_64-unknown-linux-gnu --use-napi-cross
          # ARM
          - host: macos-latest
            target: aarch64-apple-darwin
            build: pnpm build:napi --target aarch64-apple-darwin
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            build: pnpm build:napi --target aarch64-unknown-linux-gnu --use-napi-cross
            skipTests: true
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: pnpm build:napi --target aarch64-pc-windows-msvc
            skipTests: true
    name: stable - ${{ matrix.settings.target }} - node@20
    runs-on: ${{ matrix.settings.host }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.settings.target }}
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.napi-rs
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}
      - name: Install dependencies
        run: pnpm install
      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash
        env:
          NAPI_SKIP_DTS: true
      - name: Test
        run: pnpm run --filter critters test
        if: matrix.settings.skipTests != true
        env:
          NAPI_TEST: true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: "./packages/critters/dist/*.node"
          if-no-files-found: error
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Setup Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install dependencies
        run: pnpm install
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create npm dirs
        run: pnpm createNpmDirs
      - name: Move artifacts
        run: pnpm artifacts
      - name: List packages
        run: ls -R ./npm
        shell: bash
      - name: Build Integrations
        run: pnpm build
      - name: Publish
        run: |
          npm config set provenance true
          if git log -1 --pretty=%B | grep "release main";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            pnpm -r publish --access public
          elif git log -1 --pretty=%B | grep "release next";
          then
            echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
            pnpm -r publish --tag next --access public
          else
            echo "Not a release, skipping publish"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
